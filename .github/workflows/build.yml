# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  APP_NAME: better-coords

jobs:
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Extract version from gradle.properties
        id: extract_version
        run: |
          version=$(grep '^mod_version=' gradle.properties | sed 's/mod_version=//;s///')
          echo "version=$version" >> $GITHUB_OUTPUT
  
  extract-mc-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Extract version from gradle.properties
        id: extract_version
        run: |
          version=$(grep '^minecraft_version=' gradle.properties | sed 's/minecraft_version=//;s///')
          echo "version=$version" >> $GITHUB_OUTPUT

  build:
    needs: extract-version

    env:
      APP_VERSION: ${{ needs.extract-version.outputs.version }}

    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "microsoft"
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/${{ env.APP_NAME }}-${{ env.APP_VERSION }}.jar

  release:
    needs:
      - extract-version
      - extract-mc-version
      - build

    runs-on: ubuntu-latest

    env:
      APP_VERSION: ${{ needs.extract-version.outputs.version }}
      MC_VERSION: ${{ needs.extract-mc-version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Download x86_64 Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ env.APP_VERSION }}.jar
          path: ./${{ env.APP_NAME }}-${{ env.APP_VERSION }}.jar

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Create GitHub Release
        run: |
          gh release create v${{ env.APP_VERSION }} \
          ./${{ env.APP_NAME }}-${{ env.APP_VERSION }}.jar \
          --title "Release ${{ env.APP_VERSION }} for Minecraft ${{ env.MC_VERSION }}" \
          --notes "Automated release"
